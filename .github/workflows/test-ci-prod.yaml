name: Run Test <Prod>
run-name: Test Prod

on:
    push:
        branches: [main, dev]

jobs:
    unit-e2e-test:
        name: Unit and E2E Test <Prod>
        runs-on: ubuntu-22.04
        steps:
            - name: checkout repo
              uses: actions/checkout@v3

            - uses: actions/setup-node@v3
              with:
                  node-version: 16
                  cache: yarn

            - name: install dependencies
              run: yarn install --frozen-lockfile

            - name: build packages
              run: yarn build
              env:
                  NODE_OPTIONS: "--max_old_space_size=4096"

            - name: write Firebase service account key (from secrets to json)
              id: create-json
              uses: jsdaniell/create-json@v1.2.1
              with:
                  name: "serviceAccountKey.json"
                  json: ${{ secrets.SERVICE_ACCOUNT_KEY }}
                  dir: "./packages/backend/"

            - name: run test (unit & e2e)
              run: yarn test:ci-prod
              env:
                  GOOGLE_APPLICATION_CREDENTIALS: ./packages/backend/serviceAccountKey.json
                  FIREBASE_FIRESTORE_DATABASE_URL: ${{ secrets.FIREBASE_FIRESTORE_DATABASE_URL }}
                  FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
                  FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
                  FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
                  FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
                  FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
                  AUTH_GITHUB_CLIENT_ID: ${{ secrets.AUTH_GITHUB_CLIENT_ID }}
                  AUTH_USER_EMAIL: ${{ secrets.AUTH_USER_EMAIL }}
                  AUTH_GITHUB_USER_PW: ${{ secrets.AUTH_GITHUB_USER_PW }}
                  AUTH_GMAIL_CLIENT_ID: ${{ secrets.AUTH_GMAIL_CLIENT_ID }}
                  AUTH_GMAIL_CLIENT_SECRET: ${{ secrets.AUTH_GMAIL_CLIENT_SECRET }}
                  AUTH_GMAIL_REDIRECT_URL: ${{ secrets.AUTH_GMAIL_REDIRECT_URL }}
                  AUTH_GMAIL_REFRESH_TOKEN: ${{ secrets.AUTH_GMAIL_REFRESH_TOKEN }}

    npm-publish:
        needs: unit-e2e-test
        if: ${{ github.event_name == 'push' }}
        runs-on: ubuntu-22.04

        steps:
            - uses: actions/checkout@v3

            - name: Use Node.js 16
              uses: actions/setup-node@v3
              with:
                  node-version: 16
                  registry-url: "https://registry.npmjs.org"
                  cache: yarn

            - name: Initialize Project
              run: |
                  yarn install --frozen-lockfile
                  yarn build
              env:
              NODE_OPTIONS: " --max_old_space_size=4096"

            - name: Publish Project
              run: |
                  # Prevent `git commit error` when running `lerna version`
                  # It will not pushed to GitHub. It is ephemeral
                  git config --global user.email "you@example.com"
                  git config --global user.name "Your Name"
                  lerna version 0.0.0-ci.$(git rev-parse --short HEAD) --no-push --yes
                  lerna publish from-git --dist-tag ci --yes
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
